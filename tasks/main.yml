---

- tags: [ apache ]
  become: yes
  block:

    # boilerplate
  - name: bootstrap enough that ansible can run most modules
    include_tasks: "bootstrap/main.yml"
    when: bootstrap_done is not defined
    tags: [ bootstrap ]

    # boilerplate
  # - include_tasks: bootstrap/distro-vars-import.yml
  #   tags: always

    ## START OF MAIN TASKS SECTION ##

    # this install the apache package
  - include_tasks: suite/main.yml
    tags: always

  - include_tasks: configure/ssl/main.yml
    # when:
    #   - apache_vhosts_ssl | length
    tags: always

  # if sites was provided as a list, loop over the instances
  - include_tasks: configure/vhost-ssl.yml
    loop_control:
      loop_var: vhost_loop
    with_items: "{{ apache_vhosts_ssl }}"
    tags: always

  - include_tasks: configure/vhost.yml
    loop_control:
      loop_var: vhost
    with_items: "{{ apache_vhosts }}"
    tags: always

  - service:
      name: "{{ apache_service }}"
      state: started
      enabled: yes

    ## END OF MAIN TASKS SECTION ##

  # # boilerplate
  # # the idea here, is that if any of the tasks fail, it will add useful
  # # troubleshooing tools to the build.
  # rescue:
  # - debug:
  #     msg: "I ONLY WHEN !!!"

  # - include_tasks: bootstrap/distro-debug-packages.yml

  # - fail:
  #     msg: "Forcing a fail due to previous errors."
  #   when: true
