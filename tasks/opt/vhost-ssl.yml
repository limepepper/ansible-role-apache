---

- tags: [ apache, ssl ]
  become: yes
  block:


  - name: set vars for use in creating a vhost
    set_fact:
      vhost:
        SSLCertificateFile: /etc/letsencrypt/live/{{ vhost_loop.ServerName }}/cert.pem
        SSLCertificateKeyFile: /etc/letsencrypt/live/{{ vhost_loop.ServerName }}/privkey.pem
        SSLCertificateChainFile: /etc/letsencrypt/live/{{ vhost_loop.ServerName }}/chain.pem
        ServerName: "{{ vhost_loop.ServerName }}"
        ServerAliases: "{{ vhost_loop.ServerAliases }}"
        DocumentRoot: "{{ vhost_loop.DocumentRoot }}"
        force_immediate_update: "{{ vhost_loop.force_immediate_update }}"
        provider: "{{ vhost_loop.provider }}"
    when:
      - '"provider" in vhost_loop'
      - 'vhost_loop.provider == "letsencrypt"'

  - debug:
      var: vhost

  - name: install ssl httpd.conf file for {{ vhost.ServerName }}
    template:
      src: conf/httpd-ssl-conf.j2
      dest: "{{ apache_site_conf_path }}/{{ vhost.ServerName }}-ssl.conf"
      owner: root
      group: root
      mode: 0644
    register: vhost_template_conf
    notify:
      - restart apache

  - name: link the en2ensite type scripts in
    file:
      src: "{{ apache_site_conf_path }}/{{ vhost.ServerName }}-ssl.conf"
      dest: "{{ apache_sites_enabled }}/{{ vhost.ServerName }}-ssl.conf"
      state: link
    notify:
      - restart apache

  - name: guard against trying to restart with broken config
    shell: "{{ apache_conftest }} || true"
    register: conftest_check
    changed_when: "'failed' in conftest_check.stdout"

  - name: forcing restart of apache for this vhost
    service:
      name: "{{ apache_service }}"
      state: restarted
    when:
      - "'force_immediate_update' in vhost"
      - vhost_template_conf.changed
      - "'rc' in conftest_check"
      - conftest_check.rc == 0
