---

- hosts: all
  become: yes

  # if the distro doesn't ship with python
  # this shims it in before fact gathering
  gather_facts: false
  pre_tasks:
  - name: Install python2 for Ansible
    raw: sh -c "test -e /usr/bin/python || ( ( test -e /usr/bin/apt && apt -qqy update && apt install -qqy python-minimal) || ( test -e /usr/bin/dnf && /usr/bin/dnf -qy install python) || ( test -e /usr/bin/yum && /usr/bin/yum -qy install python) )"
    register: output
    changed_when: 'output.stdout|trim() != ""'
  - name: Gathering Facts
    setup:
    tags: always
  # end of python shim

  tasks:

    - block:

        - name: import the role under test
          import_role:
            name: '{{playbook_dir}}/..'

        - name: pip pyOpenSSL package
          pip:
            name: pyOpenSSL
            version: 18.0.0

        - name: create the var cache directory
          file:
            name: "{{ item }}"
            state: directory
          with_items:
            - /etc/ssl/crt
            - /etc/ssl/private
            - /etc/ssl/csr
          tags: always

        - set_fact:
            csr: /etc/ssl/csr/ansible.com.csr
            key: /etc/ssl/private/ansible.com.pem
            cert: /etc/ssl/crt/ansible.com.crt

        - name: Generate an OpenSSL private key.
          openssl_privatekey:
            path: /etc/ssl/private/ansible.com.pem

        - openssl_csr:
            path: /etc/ssl/csr/ansible.com.csr
            privatekey_path: /etc/ssl/private/ansible.com.pem
            country_name: GB
            organization_name: "MOnkeyBadger LTd"
            email_address: certs@limepepper.co.uk
            common_name: zoneminder
            subject_alt_name: 'DNS:zoneminder,DNS:zoneminder.limepepper.co.uk'

        - name: Generate a Self Signed OpenSSL certificate
          openssl_certificate:
            path: /etc/ssl/crt/ansible.com.crt
            privatekey_path: /etc/ssl/private/ansible.com.pem
            csr_path: /etc/ssl/csr/ansible.com.csr
            provider: selfsigned

        - name: create the test http home dir directory
          file:
            name: /var/www/mywordpresssite2.com
            state: directory
          notify:
            - reload apache

        - copy:
            content: |
              <html><body><h2>This is a test page YYY</h2></body></html>
            dest: /var/www/mywordpresssite2.com/index.html
          notify:
            - reload apache

        - name: add a https vhost for testing
          apache_vhost_ssl:
            ServerName: mywordpresssite2.com
            ServerAliases:
              - www.mywordpresssite2.com
            DocumentRoot: /var/www/mywordpresssite2.com
            SSLCertificateKeyFile: /etc/ssl/private/ansible.com.pem
            SSLCertificateFile: /etc/ssl/crt/ansible.com.crt
            # SSLCertificateChainFile:
          notify:
            - reload apache
          tags: ssl

        #
        #   register: mywordpresssite2_com_vhost
        #   tags: dovhost
        #
        - name: Ensure that the existing certificate belongs to the specified private key
          openssl_certificate:
            path: "{{ cert }}"
            privatekey_path: "{{ key }}"
            provider: assertonly

        # - name: Verify that an existing certificate was issued by the Let's Encrypt CA and is currently still valid
        #   openssl_certificate:
        #     path: /etc/ssl/crt/example.com.crt
        #     provider: assertonly
        #     issuer:
        #       O: Let's Encrypt
        #     has_expired: False

#/etc/pki/tls/certs/localhost.crt
#/etc/pki/tls/private/localhost.key

      # for the purposes of testing and debugging, write out the hostvars json
      always:
        - name: create the var cache directory
          file:
            name: "/var/cache/ansible/attributes"
            state: directory
          tags: always

        - name: write out the hostvars to json for inspec testing
          copy:
            content: "{{ hostvars[inventory_hostname] | strip_fieldattributes | to_nice_json }}"
            dest: "/var/cache/ansible/attributes/hostvars.json"
          changed_when: false
          tags: always
      rescue:
        - debug:
            msg: "As the run has failed, I am going to install debugging utils"

        - include_role:
            name: '{{playbook_dir}}/..'
            tasks_from: bootstrap/distro-debug-packages.yml
          tags: always
